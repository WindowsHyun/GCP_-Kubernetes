input {
  file {
    path => "/workdir/logs/*[LogName].log"  # Wallet 로그 파일 경로 패턴
    start_position => "beginning"
    codec => multiline {
      pattern => "^\["
      negate => true
      what => "previous"
    }
  }
  file {
    path => "/workdir/logs/*panic.log"  # panic 로그 파일 경로 패턴
    start_position => "beginning"
    codec => multiline {
      pattern => "^---"
      what => "previous"
    }
  }
}

filter {
  grok {
    match => { 
      "message" => [
        "\[%{TIMESTAMP_ISO8601:timestamp}\]\[%{LOGLEVEL:loglevel}\]\[%{DATA:file}\:%{NUMBER:line}\]\[%{DATA:user_id}(?:, )?\](?:\[%{GREEDYDATA:message}\])?", # [LogName] 로그 파싱
        "%{TIMESTAMP_ISO8601:timestamp} \[%{WORD:level}\] %{GREEDYDATA:message}" # panic 로그 파싱
      ]
    }
  }

  if [user_id] == "" {
    mutate {
      add_field => { "user_id" => "none" }
    }
  }

  mutate {
    add_field => { "ServerType" => "[LogName]" }
  }

  date {
    match => ["timestamp", "yyyy-MM-dd HH:mm:ss.SSS"]
    target => "@timestamp"
    timezone => "Asia/Seoul"
  }
}

output {
  elasticsearch {
    hosts => ["https://[els주소]:9200"]
    ssl_enabled => true
    ssl_verification_mode => none
    ssl_certificate_authorities => "/usr/share/logstash/config/elastic-certs/logstash.crt"
    ssl_certificate => "/usr/share/logstash/config/elastic-certs/logstash.crt"
    ssl_key => "/usr/share/logstash/config/elastic-certs/logstash.pkcs8.key"
    index => "[ContainerName]"
    user => "[els아이디]"  # 사용자 이름 추가
    password => "[els비밀번호]"  # 비밀번호 추가
  }
}